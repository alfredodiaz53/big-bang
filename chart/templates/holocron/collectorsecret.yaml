{{- $pkg := "holocron" }}
{{- if and (get .Values.addons $pkg).enabled (not (get .Values.addons $pkg).collectorAuth.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: holocron-tokens
  namespace: {{ $pkg }}
  labels:
    app.kubernetes.io/name: {{ $pkg }}
    {{- include "commonLabels" . | nindent 4 }}
type: generic
data:
  {{- if and .Values.addons.gitlab.enabled (get .Values.addons $pkg).collectorAuth.gitlabToken }}
  gitlab-build-0: {{ (get .Values.addons $pkg).collectorAuth.gitlabToken | b64enc }}
  gitlab-scm-0: {{ (get .Values.addons $pkg).collectorAuth.gitlabToken | b64enc }}
  gitlab-workflow-0: {{ (get .Values.addons $pkg).collectorAuth.gitlabToken | b64enc }}
  {{- else }}
  gitlab-build-0: {{ "holocron" | b64enc }}
  gitlab-scm-0: {{ "holocron" | b64enc }}
  gitlab-workflow-0: {{ "holocron" | b64enc }}
  {{- end }}
  jira-workflow-0: ""
---
{{- if and .Values.addons.gitlab.enabled (not (get .Values.addons $pkg).collectorAuth.gitlabToken) }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $pkg }}-credential-creator
  namespace: {{ $pkg }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $pkg }}-credential-creator
  namespace: gitlab
  labels:
    {{- include "commonLabels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups: [""]
  resources:
  - pods/exec
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $pkg }}-credential-creator
  namespace: gitlab
  labels:
    {{- include "commonLabels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ $pkg }}-credential-creator
  namespace: {{ $pkg }}
roleRef:
  kind: Role
  name: {{ $pkg }}-credential-creator
  apiGroup: rbac.authorization.k8s.io
---
{{- $pkg := "holocron" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: holocron-gitlab-job
  namespace: {{ $pkg }}
  labels:
    app.kubernetes.io/name: {{ $pkg }}-gitlab-creds
    {{- include "commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh.hook-weight": "0"
    "helm.sh.hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: holocron-gitlab-job
      labels:
        app.kubernetes.io/name: {{ $pkg }}-gitlab-creds
        {{- include "commonLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ $pkg }}-credential-creator
      restartPolicy: Never
      containers:
      - name: create-access-token
        image: registry1.dso.mil/ironbank/big-bang/base:2.0.0
        command:
        - /bin/sh
        - -ec
        - |
            until curl -fsI http://localhost:15021/healthz/ready; do echo \"Waiting for sidecar...\"; sleep 3; done;
            echo \"Sidecare available. Running the command...\"
            TOOLBOX_POD="`kubectl get pod -n gitlab -l app=toolbox -o jsonpath='{.items[*].metadata.name}'`"
            kubectl exec -n gitlab $TOOLBOX_POD -- gitlab-rails runner "User.admins.first.personal_access_tokens.where(name: 'holocron').each { |token| token.delete }; token = User.admins.first.personal_access_tokens.create(name: 'holocron', scopes: ['api'], expires_at: DateTime.now + 1); token.set_token('holocron'); token.save!"
            x=$(echo $?); curl -fsI -X POST http://localhost:15020/quitquitquit && exit $x
{{- end }}
{{- end }}
