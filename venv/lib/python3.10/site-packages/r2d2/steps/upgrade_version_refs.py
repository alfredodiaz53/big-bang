class R2D2Step:
    step = "Upgrade version references"

    def __init__(self, repo, repo1, console, config):
        self.repo = repo
        self.repo1 = repo1
        self.console = console
        self.config = config

    def run(self):
        self.repo.checkout(self.repo1.release_branch)
        self.console.spinner.start("Upgrading version refs on local Big Bang repo")
        self.repo.update_base_gitrepository_yaml(str(self.repo1.next_release_tag))
        self.repo.update_chart_release_version(str(self.repo1.next_release_tag))
        self.repo.run_helm_docs()
        self.console.spinner.succeed(
            self.console.term.green("Version refs upgraded on local Big Bang repo")
        )
        self.console.warning(
            "ALERT: Please review the changes to your local Big Bang and commit if correct"
        )
        self.console.log(
            f"""
{self.console.term.gray('$')} {self.console.term.yellow('cd ' + self.config["bb_path"])}
{self.console.term.gray('$')} {self.console.term.yellow('git status')}

{self.console.term.gray('$')} {self.console.term.yellow('yq ".spec.ref.tag" base/gitrepository.yaml')}
# Verify the above prints {self.console.term.blue(str(self.repo1.next_release_tag))}

{self.console.term.gray('$')} {self.console.term.yellow('yq ".version" chart/Chart.yaml')}
# Verify the above prints {self.console.term.blue(str(self.repo1.next_release_tag))}

Check the Big Bang MRs in the release notes to see if
any packages have enabled mTLS strict or graduated out of BETA
since last release, and update {self.console.term.blue('./Packages.md')} accordingly.
"""
        )
