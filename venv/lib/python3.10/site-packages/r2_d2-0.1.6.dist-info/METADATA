Metadata-Version: 2.1
Name: r2-d2
Version: 0.1.6
Summary: Big Bang release interactive CLI
Author: Platform One
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: GitPython (>=3.1.27,<4.0.0)
Requires-Dist: Jinja2 (>=3.1.1,<4.0.0)
Requires-Dist: blessed (==1.19.0)
Requires-Dist: docker (>=5.0.3,<6.0.0)
Requires-Dist: emoji (>=1.7.0,<2.0.0)
Requires-Dist: grafana-client (>=3.5.0,<4.0.0)
Requires-Dist: halo (>=0.0.31,<0.0.32)
Requires-Dist: inquirer (==2.8.0)
Requires-Dist: keepachangelog (==2.0.0.dev2)
Requires-Dist: minio (>=7.1.15,<8.0.0)
Requires-Dist: pathlib (>=1.0.1,<2.0.0)
Requires-Dist: pyfiglet (>=0.8.post1,<0.9)
Requires-Dist: python-gitlab (>=3.3.0,<4.0.0)
Requires-Dist: requests (>=2.27.1,<3.0.0)
Requires-Dist: ruamel.yaml (>=0.17.21,<0.18.0)
Requires-Dist: semver (>=2.13.0,<3.0.0)
Requires-Dist: tabulate (>=0.8.9,<0.9.0)
Description-Content-Type: text/markdown

# R2-D2 - Robotic Release Documentation Delivery

## Installing

Python 3.10+ is a prereq.

```shell
# create a venv if needed
python3 -m venv venv
source venv/bin/activate

# install from git
python3 -m pip install git+https://repo1.dso.mil/platform-one/big-bang/apps/product-tools/R2-D2.git
```

## Usage

Run in interactive CLI mode:

```shell
r2d2
```

Run in noninteractive CLI mode w/ config from [`~/.r2d2/config.yaml`](r2d2/templates/config.yaml):

```shell
yq -i '.interactive = false' ~/.r2d2/config.yaml
# replace below w/ your Repo1 token
yq -i '.repo1_token = "<token>"' ~/.r2d2/config.yaml
# replace below w/ relative path to your local cloned bigbang repo
yq -i '.bb_path = "<path>"' ~/.r2d2/config.yaml
# steps you want to run, ex. "Check last release SHAs", "Create release branch"
yq -i '.steps = ["<step1>", "<step2>", "<step3>"]' ~/.r2d2/config.yaml

# run it
r2d2
```

Configuration can be done either via the r2d2 config file at `~/.r2d2/config.yaml` (shown above) or by passing in command line flags of the format `--<key>=<value>`, eg, `--interactive=false` or `--skip_gitlab=true`. Nested keys are allowed such as `--package_overrides.policy.name=somename`, but currently list values like `steps` or `beta_list` are not. The previous example can also be run as:

```sh
# steps you want to run, ex. "Check last release SHAs", "Create release branch"
yq -i '.steps = ["<step1>", "<step2>", "<step3>"]' ~/.r2d2/config.yaml
r2d2 --interactive=false --repo1_token=<token> --bb_path=<path>
```

## Viewing Docs

```shell
poetry install --dev
poetry run mkdocs serve
```

